variables:
  # BASE_IMAGE_NAME: ${REGISTRY_SERVER}/alpine
  BASE_IMAGE_NAME: alpine
stages:
  - test
  - build
  - publish

container:
  stage: publish
  image: debian:bullseye-slim
  # image: buildah/buildah
  # image: google/cloud-sdk
  # dependencies:
  #   - build
  before_script:
    - apt-get update -qq
    - apt-get -qq -y install wget gnupg2
    - echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    - wget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/Debian_10/Release.key -O Release.key
    - apt-key add - < Release.key
    - apt-get update -qq
    - apt-get -qq -y install buildah
    - wget -nv https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/Debian_10/Release.key -O- | apt-key add -
    - echo 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    - apt-get update -qq
    - apt-get -qq -y install podman
    - podman version
    - buildah version
    - echo $GCLOUD_KEY | base64 -d > /tmp/${CI_PIPELINE_ID}.json
    # - export GOOGLE_APPLICATION_CREDENTIALS=/tmp/${CI_PIPELINE_ID}.json
    # - gcloud auth configure-docker -q
    # - gcloud config set account hyperd 
    # - echo $GOOGLE_REGISTRY_SERVER
    - cat /tmp/${CI_PIPELINE_ID}.json | podman login -u _json_key --password-stdin https://eu.gcr.io
    # - podman login --authfile=/tmp/${CI_PIPELINE_ID}.json https://eu.gcr.io
    # - cat  /tmp/$CI_PIPELINE_ID.json | podman login --username  --â€“password-stdin "${GOOGLE_REGISTRY_SERVER}"
  script:
    - cd base/alpine
    - buildah bud -t ${BASE_IMAGE_NAME}:${CI_COMMIT_SHA} .
    # - buildah push ${BASE_IMAGE_NAME}:${CI_COMMIT_SHA} docker://eu.gcr.io/hyperd-containers
  after_script:
    - podman logout https://eu.gcr.io